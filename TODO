TODO

Profile: (Allow editing of a fiew specific to a like?)
  Animals
  Family
  Career
  Politics
  Marital status
  Books & Reading
  Health & Fitness
  Nightlife
  Outdoors
  Nightlife

  # maybe make an embedded document of who viewed and timestamp?
  Views of Profile -> array (log user_id, last_viewed_at)


# Refactor, think about how this can be from / to on both sides and each side
# can independently manage the communication? Two copies? Extra columns for from/to
# statuses?

# another alternative is a list of embedded documents in each user profile, that
# has their email id, and the state of it.


# Maybe get rid of from/to in communication and put it in mailbox?

# Sent could be what is in communication

# The rest of the mailbox functions for trash, archive etc., handled through Mailbox?

Mailbox
  has_many :communications
  belongs_to :user

  state to control inbox, trash, sent etc.

  def sent
  end

  def trash
  end

  def pending
  end
end

Messages:
  Inbox
  Sent
  Trash



# query to see where likes match current users likes
User.where('user_profile.likes' => {'$in' =>  ['Family', 'Education']}).count
 within(range).min_age(18).max_age(37)